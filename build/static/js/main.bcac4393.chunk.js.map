{"version":3,"sources":["components/TopSection.js","firebase.js","components/FormSection.js","App.js","reportWebVitals.js","index.js"],"names":["BrandTitle","styled","h1","CommingSoon","h2","QuestionTitle","TopSection","success","setSuccess","color","style","marginLeft","marginRight","width","height","duration","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAuth","getFirestore","FormContainer","getStorage","div","SubmitBtn","button","TextInput","input","Thanks","ForqSection","h3","newCityRef","loading","setLoading","doc","collection","newCityRef2","useState","contact","setContact","name","setName","addData","a","setDoc","alert","message","addData2","console","log","useEffect","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","required","TopSectionContainer","App","FormSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAMMA,EAAaC,IAAOC,GAAV,gJAOVC,EAAcF,IAAOG,GAAV,oKASXC,EAAgBJ,IAAOC,GAAV,8HAoBJI,EAZI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAAyB,EAAhBC,WAC1B,OAAO,qCACH,cAACR,EAAD,8BACA,cAACG,EAAD,2BACA,cAAC,WAAD,CAAUM,MAAM,QAAQC,MAAO,CAACC,WAAW,OAAOC,YAAY,QAAUC,MAAM,OAAOC,OAAO,OAAOC,SAAS,QAC1GR,GAAU,cAACF,EAAD,4F,uDCjBPW,EAAWC,YAZD,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMJC,GADOC,YAAQX,GACVY,eCXZC,GDYiBC,YAAWd,GCZZf,IAAO8B,IAAV,gJASbC,EAAY/B,IAAOgC,OAAV,2UAkBTC,EAAYjC,IAAOkC,MAAV,+SAeTC,EAASnC,IAAOC,GAAV,2EAiFGmC,GA5ECpC,IAAOqC,GAAV,4FAMO,SAAC,GAA+C,IAA9C/B,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,WAErB+B,GAFyD,EAAzBC,QAAyB,EAAhBC,WAE5BC,YAAIC,YAAWjB,EAAI,eAChCkB,EAAcF,YAAIC,YAAWjB,EAAI,eAEvC,EAA8BmB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAGGC,EAAO,uCAAG,sBAAAC,EAAA,+EAGHC,YAAOb,EAAW,CACpBS,KAAMA,EACNF,QAASA,IALJ,OAQTtC,GAAW,GARF,+CAWT6C,MAAM,KAAEC,SAXC,wDAAH,qDAePC,EAAQ,uCAAG,sBAAAJ,EAAA,+EAGJC,YAAOR,EAAY,CACrBI,KAAM,SACNF,QAAS,WALH,sDAWVU,QAAQC,IAAI,KAAEH,SAXJ,wDAAH,qDAefI,qBAAU,WACNH,MACF,IAeE,OAAO,8BACFhD,EAAS,cAAC6B,EAAD,uCACV,sBAAMuB,SAfW,SAACC,GAClBA,EAAEC,iBACc,KAAZf,GAA2B,KAATE,EAClBE,IAEAG,MAAM,+BAUV,SACI,eAACxB,EAAD,WACQ,cAACK,EAAD,CAAW4B,SAAU,SAACF,GAAD,OAAKX,EAAQW,EAAEG,OAAOC,QAAQC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,IAC3F,cAACjC,EAAD,CAAW4B,SAAU,SAACF,GAAD,OAAKb,EAAWa,EAAEG,OAAOC,QAAQC,KAAK,OAAOC,YAAY,wBAClF,cAAClC,EAAD,CAAWiC,KAAK,SAAhB,2BCpHdG,EAAsBnE,IAAO8B,IAAV,gcAuBVsC,MAZf,WACE,MAA8BxB,oBAAS,GAAvC,mBAAOtC,EAAP,KAAgBC,EAAhB,KAGA,OACE,eAAC4D,EAAD,WACE,cAAC,EAAD,CAAY7D,QAASA,EAASC,WAAYA,IAC1C,cAAC8D,EAAD,CAAa/D,QAASA,EAASC,WAAYA,QCdlC+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bcac4393.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { FlippingSquare, Hypnosis, TwinSpin } from 'react-cssfx-loading/lib'\n\n\n\nconst BrandTitle = styled.h1`\n    margin-top: 0;\n    font-size: 2.5rem;\n    color: #fff;\n    font-weight: bold;  \n    font-family: 'ubuntu';\n`\nconst CommingSoon = styled.h2`\n    margin-top: 0px;\n    font-size: 2.5rem;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'ubuntu';\n    color: purple;\n`\n\nconst QuestionTitle = styled.h1`\n    margin-top: 20px;\n    font-size: 1rem;\n    color: purple;\n    text-transform: capitalize;\n`\n\n\nconst TopSection = ({success, setSuccess}) => {\n    return <>\n        <BrandTitle>Coding Cambodia</BrandTitle>\n        <CommingSoon>Comming Soon</CommingSoon>\n        <Hypnosis color=\"green\" style={{marginLeft:'auto',marginRight:'auto'}}  width=\"80px\" height=\"80px\" duration=\"2s\"/>\n        {!success &&<QuestionTitle>\n            Would You like to get notified when we are ready? Drop your contact here.\n        </QuestionTitle>\n}\n   </>\n}\n\nexport default TopSection;","\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getAuth} from \"firebase/auth\";\nimport {getFirestore} from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAhYhSh9VdVrNTLYUdiLoTJmKJ2-ZH1N4U\",\n  authDomain: \"crud-fe4b6.firebaseapp.com\",\n  databaseURL: \"https://crud-fe4b6.firebaseio.com\",\n  projectId: \"crud-fe4b6\",\n  storageBucket: \"crud-fe4b6.appspot.com\",\n  messagingSenderId: \"119580648901\",\n  appId: \"1:119580648901:web:49cc35e17949803d0017ac\",\n  measurementId: \"G-LQGTBYH69B\"\n};\n\n// Initialize Firebase\nexport const firebase = initializeApp(firebaseConfig);\nexport const auth = getAuth(firebase);\nexport const db = getFirestore();\nexport const storage = getStorage(firebase);\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { db } from '../firebase';\nimport { CircularProgress} from 'react-cssfx-loading/lib'\n\nimport { collection, doc, setDoc } from \"firebase/firestore\";\n\n\n\nconst FormContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    text-align: center;\n    heigth: 20px;\n\n`\n\nconst SubmitBtn = styled.button`\n    background: #4CAF50;\n    color: #fff;\n    max-width: 400px;\n    min-width: 150px;\n    align-self: center;\n    border: none;\n    padding: 5px;\n    border-radius: 5px;\n    height: 45px;\n    font-size: 1.2rem;\n    &:hover{\n        background: purple;\n        cursor: pointer;\n\n    }\n  \n`\nconst TextInput = styled.input`\n    align-self: center;\n    border: none;\n    padding: 5px;\n    border-radius: 5px;\n    height: 30px;\n    border: 1px solid #ccc; \n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);\n    width: 300px;\n    font-size: 1rem;\n    height: 35px;\n    margin-bottom: 10px;\n\n`\n\nconst Thanks = styled.h1`\n    text-align: center;\n    color: #fff;\n  \n`\nconst Loading = styled.h3`\n    font-size: 2rem;\n    color: #fff;\n    font-weight: bold;\n`\n\nconst ForqSection = ({success, setSuccess,loading, setLoading}) => {\n\n    const newCityRef = doc(collection(db, \"customers\"));\n    const newCityRef2 = doc(collection(db, \"cusNumbers\"));\n\n    const [contact, setContact] = useState('');\n    const [name, setName] = useState('');\n   \n    \nconst  addData = async()=>{\n    try{\n       \n        await setDoc(newCityRef,{\n            name: name,\n            contact: contact\n        })\n       \n        setSuccess(true)\n        \n    }catch(e){\n        alert(e.message);\n    }\n}\n\nconst  addData2 = async()=>{\n    try{\n       \n        await setDoc(newCityRef2,{\n            name: \"arrive\",\n            contact: \"arrive\"\n        })\n       \n       \n        \n    }catch(e){\n        console.log(e.message);\n    }\n}\n\nuseEffect(()=>{\n    addData2();\n},[])\n\n    const handelSubmit = (e) => {\n        e.preventDefault();\n        if (contact !== '' && name !== '') {\n            addData();\n        }else{\n            alert('Please fill all the fields')\n        }\n    }\n\n    // condition1 ? value1\n    //      : condition2 ? value2\n    //      : value4;\n\n    return <div>\n        {success? <Thanks>Thanks for your interest</Thanks>:\n        <form onSubmit={handelSubmit}>\n            <FormContainer>\n                    <TextInput onChange={(e)=>setName(e.target.value)} type=\"text\" placeholder=\"Your Name\" required />\n                        <TextInput onChange={(e)=>setContact(e.target.value)} type=\"text\" placeholder=\"Your Email or Phone\" />\n                    <SubmitBtn type=\"submit\">Save</SubmitBtn>\n            </FormContainer>\n        </form>\n}\n    </div >\n\n}\n\nexport default ForqSection;","import TopSection from \"./components/TopSection\";\nimport FormSection from \"./components/FormSection\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { CircularProgress } from \"react-cssfx-loading/lib\";\n\n\n\nconst TopSectionContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\n    padding: 20px;\n    text-align: center;\n    height: 100vh;\n    background: #0f0c29;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to right, #24243e, #302b63, #0f0c29);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to right, #24243e, #302b63, #0f0c29); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`\n\nfunction App() {\n  const [success, setSuccess] = useState(false);\n\n\n  return (\n    <TopSectionContainer>\n      <TopSection success={success} setSuccess={setSuccess} />\n      <FormSection success={success} setSuccess={setSuccess} />\n    </TopSectionContainer>\n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}