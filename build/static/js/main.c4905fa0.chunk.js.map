{"version":3,"sources":["components/TopSection.js","firebase.js","components/FormSection.js","App.js","reportWebVitals.js","index.js"],"names":["BrandTitle","styled","h1","CommingSoon","h2","QuestionTitle","TopSection","success","setSuccess","color","style","marginLeft","marginRight","width","height","duration","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAuth","getFirestore","FormContainer","getStorage","div","SubmitBtn","button","TextInput","input","Thanks","ForqSection","h3","newCityRef","loading","setLoading","doc","collection","newCityRef2","useState","contact","setContact","name","setName","email","setEmail","addData","a","setDoc","createdAt","Date","alert","message","addData2","console","log","useEffect","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","required","TopSectionContainer","App","FormSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4905fa0.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FlippingSquare, Hypnosis, TwinSpin } from 'react-cssfx-loading/lib'\r\n\r\n\r\n\r\nconst BrandTitle = styled.h1`\r\n    margin-top: 0;\r\n    font-size: 2.5rem;\r\n    color: #fff;\r\n    font-weight: bold;  \r\n    font-family: 'ubuntu';\r\n`\r\nconst CommingSoon = styled.h2`\r\n    margin-top: 0px;\r\n    font-size: 2.5rem;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-family: 'ubuntu';\r\n    color: purple;\r\n`\r\n\r\nconst QuestionTitle = styled.h1`\r\n    margin-top: 20px;\r\n    font-size: 1rem;\r\n    color: purple;\r\n    text-transform: capitalize;\r\n    font-family: 'Siemreap';\r\n`\r\n\r\n\r\nconst TopSection = ({success, setSuccess}) => {\r\n    return <>\r\n        <BrandTitle>Coding Cambodia</BrandTitle>\r\n        <CommingSoon>Comming Soon</CommingSoon>\r\n        <Hypnosis color=\"green\" style={{marginLeft:'auto',marginRight:'auto'}}  width=\"80px\" height=\"80px\" duration=\"2s\"/>\r\n        {!success &&<QuestionTitle>\r\n            បញ្ចូលអ៊ីមែល ឬលេខទូរស័ព្ធរបស់អ្នកដើម្បីទទួលបានការបញ្ជូនសាររបស់យើង​ ពេលយើងរួចរាល់។\r\n        </QuestionTitle>\r\n}\r\n   </>\r\n}\r\n\r\nexport default TopSection;","\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {getFirestore} from 'firebase/firestore'\r\nimport { getStorage } from \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAhYhSh9VdVrNTLYUdiLoTJmKJ2-ZH1N4U\",\r\n  authDomain: \"crud-fe4b6.firebaseapp.com\",\r\n  databaseURL: \"https://crud-fe4b6.firebaseio.com\",\r\n  projectId: \"crud-fe4b6\",\r\n  storageBucket: \"crud-fe4b6.appspot.com\",\r\n  messagingSenderId: \"119580648901\",\r\n  appId: \"1:119580648901:web:49cc35e17949803d0017ac\",\r\n  measurementId: \"G-LQGTBYH69B\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const firebase = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(firebase);\r\nexport const db = getFirestore();\r\nexport const storage = getStorage(firebase);\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { db } from '../firebase';\r\nimport { CircularProgress} from 'react-cssfx-loading/lib'\r\n\r\nimport { collection, doc, setDoc } from \"firebase/firestore\";\r\n\r\n\r\n\r\nconst FormContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n    text-align: center;\r\n    heigth: 20px;\r\n\r\n`\r\n\r\nconst SubmitBtn = styled.button`\r\n    background: #4CAF50;\r\n    color: #fff;\r\n    max-width: 400px;\r\n    min-width: 150px;\r\n    align-self: center;\r\n    border: none;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    height: 45px;\r\n    font-size: 1.2rem;\r\n    font-family: 'Siemreap';\r\n    &:hover{\r\n        background: purple;\r\n        cursor: pointer;\r\n     \r\n\r\n    }\r\n  \r\n`\r\nconst TextInput = styled.input`\r\n    align-self: center;\r\n    border: none;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    height: 30px;\r\n    border: 1px solid #ccc; \r\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);\r\n    width: 300px;\r\n    font-size: 1rem;\r\n    height: 35px;\r\n    margin-bottom: 10px;\r\n    font-family: 'Siemreap';\r\n\r\n`\r\n\r\nconst Thanks = styled.h1`\r\n    text-align: center;\r\n    color: #fff;\r\n    font-family: 'Siemreap';\r\n  \r\n`\r\nconst Loading = styled.h3`\r\n    font-size: 2rem;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-family: 'Siemreap';\r\n`\r\n\r\nconst ForqSection = ({success, setSuccess,loading, setLoading}) => {\r\n\r\n    const newCityRef = doc(collection(db, \"customers\"));\r\n    const newCityRef2 = doc(collection(db, \"cusNumbers\"));\r\n\r\n    const [contact, setContact] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n   \r\n    \r\nconst  addData = async()=>{\r\n    try{\r\n       \r\n        await setDoc(newCityRef,{\r\n            name: name,\r\n            contact: contact,\r\n            email: email,\r\n            createdAt: new Date()\r\n        })\r\n       \r\n        setSuccess(true)\r\n        \r\n    }catch(e){\r\n        alert(e.message);\r\n    }\r\n}\r\n\r\nconst  addData2 = async()=>{\r\n    try{\r\n       \r\n        await setDoc(newCityRef2,{\r\n            name: \"arrive\",\r\n            contact: \"arrive\",\r\n            createdAt: new Date()\r\n        })\r\n       \r\n       \r\n        \r\n    }catch(e){\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nuseEffect(()=>{\r\n    addData2();\r\n},[])\r\n\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (contact !== '' && name !== '') {\r\n            addData();\r\n        }else{\r\n            alert('សូមបញ្ចូលព័ត៌មានបានត្រឹមត្រូវ')\r\n        }\r\n    }\r\n\r\n    // condition1 ? value1\r\n    //      : condition2 ? value2\r\n    //      : value4;\r\n\r\n    return <div>\r\n        {success? <Thanks>អរគុណសំរាប់ការចាប់អារម្មរបស់អ្នក់</Thanks>:\r\n        <form onSubmit={handelSubmit}>\r\n            <FormContainer>\r\n                    <TextInput onChange={(e)=>setName(e.target.value)} type=\"text\" placeholder=\"ឈ្មោះរបស់អ្នក\" required />\r\n                        <TextInput onChange={(e)=>setContact(e.target.value)} type=\"text\" placeholder=\"លេខទូរស័ព្ធ\" />\r\n                        <TextInput onChange={(e)=>setEmail(e.target.value)} type=\"email\" placeholder=\"អុីម៉ែលអ្នក\" />\r\n                    <SubmitBtn type=\"submit\">រក្សាទុក</SubmitBtn>\r\n            </FormContainer>\r\n        </form>\r\n}\r\n    </div >\r\n\r\n}\r\n\r\nexport default ForqSection;","import TopSection from \"./components/TopSection\";\r\nimport FormSection from \"./components/FormSection\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CircularProgress } from \"react-cssfx-loading/lib\";\r\n\r\n\r\n\r\nconst TopSectionContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n    padding: 20px;\r\n    text-align: center;\r\n    height: 100vh;\r\n    background: #0f0c29;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #24243e, #302b63, #0f0c29);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #24243e, #302b63, #0f0c29); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n`\r\n\r\nfunction App() {\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  return (\r\n    <TopSectionContainer>\r\n      <TopSection success={success} setSuccess={setSuccess} />\r\n      <FormSection success={success} setSuccess={setSuccess} />\r\n    </TopSectionContainer>\r\n  );\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}